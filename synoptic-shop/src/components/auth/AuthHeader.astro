---
// src/components/auth/AuthHeader.astro - Authentication header component
---

<!-- Auth Section for Header -->
<div class="auth-section flex items-center space-x-4">
  
  <!-- Loading State -->
  <div id="auth-loading" class="flex items-center">
    <div class="animate-pulse flex space-x-2">
      <div class="w-8 h-8 bg-gray-200 rounded-full"></div>
    </div>
  </div>

  <!-- Not Authenticated State -->
  <div id="auth-not-authenticated" class="hidden flex items-center space-x-3">
    <button 
      id="open-auth-modal" 
      class="bg-primary text-white px-4 py-2 rounded-lg hover:bg-primary-dark transition-colors text-sm font-medium"
    >
      Sign In
    </button>
  </div>

  <!-- Authenticated State -->
  <div id="auth-authenticated" class="hidden flex items-center space-x-3">
    
    <!-- User Menu Dropdown -->
    <div class="relative" id="user-menu">
      <!-- User Menu Button -->
      <button 
        id="user-menu-button" 
        class="flex items-center space-x-2 text-gray-700 hover:text-gray-900 transition-colors p-2 rounded-lg hover:bg-gray-100"
        aria-expanded="false"
        aria-haspopup="true"
      >
        <!-- User Avatar -->
        <div class="w-8 h-8 bg-primary rounded-full flex items-center justify-center">
          <span id="user-avatar-text" class="text-white text-sm font-medium">
            <!-- Will be populated with user initials -->
          </span>
        </div>
        
        <!-- User Name -->
        <span id="user-display-name" class="hidden sm:block text-sm font-medium">
          <!-- Will be populated with user name -->
        </span>
        
        <!-- Dropdown Arrow -->
        <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
        </svg>
      </button>

      <!-- Dropdown Menu -->
      <div 
        id="user-dropdown" 
        class="hidden absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-50 border border-gray-200"
        role="menu" 
        aria-orientation="vertical"
      >
        <!-- User Info -->
        <div class="px-4 py-3 border-b border-gray-100">
          <p class="text-sm font-medium text-gray-900" id="dropdown-user-name">
            <!-- User name -->
          </p>
          <p class="text-sm text-gray-500" id="dropdown-user-email">
            <!-- User email -->
          </p>
        </div>

        <!-- Menu Items -->
        <a 
          href="/account" 
          class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors"
          role="menuitem"
        >
          <svg class="w-4 h-4 inline mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
          </svg>
          My Account
        </a>

        <a 
          href="/orders" 
          class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors"
          role="menuitem"
        >
          <svg class="w-4 h-4 inline mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
          </svg>
          My Orders
        </a>

        <a 
          href="https://app.synoptic.vision" 
          target="_blank"
          class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors"
          role="menuitem"
        >
          <svg class="w-4 h-4 inline mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
          </svg>
          Open Synoptic App
        </a>

        <div class="border-t border-gray-100 mt-1">
          <button 
            id="signout-button" 
            class="block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50 transition-colors"
            role="menuitem"
          >
            <svg class="w-4 h-4 inline mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
            </svg>
            Sign Out
          </button>
        </div>
      </div>
    </div>

    <!-- Cart Icon (if not already in header) -->
    <button 
      id="cart-button" 
      class="relative p-2 text-gray-700 hover:text-gray-900 transition-colors"
      aria-label="Shopping cart"
    >
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m1.6 8L6 6H2m5 7v1m0 0v5a2 2 0 002 2h6a2 2 0 002-2v-5m-8 0h8"></path>
      </svg>
      
      <!-- Cart Count Badge -->
      <span 
        id="cart-count" 
        class="hidden absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center"
      >
        0
      </span>
    </button>
  </div>
</div>

<style>
  .text-primary {
    color: rgb(51, 73, 152);
  }
  
  .bg-primary {
    background-color: rgb(51, 73, 152);
  }
  
  .bg-primary-dark {
    background-color: rgb(41, 63, 142);
  }

  /* Dropdown animation */
  #user-dropdown {
    opacity: 0;
    transform: translateY(-10px);
    transition: opacity 0.2s ease, transform 0.2s ease;
  }
  
  #user-dropdown.show {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  // This script will be enhanced by the main auth handler
  document.addEventListener('DOMContentLoaded', function() {
    // User menu dropdown functionality
    const userMenuButton = document.getElementById('user-menu-button');
    const userDropdown = document.getElementById('user-dropdown');
    
    if (userMenuButton && userDropdown) {
      userMenuButton.addEventListener('click', function(e) {
        e.stopPropagation();
        const isHidden = userDropdown.classList.contains('hidden');
        
        if (isHidden) {
          userDropdown.classList.remove('hidden');
          setTimeout(() => userDropdown.classList.add('show'), 10);
          userMenuButton.setAttribute('aria-expanded', 'true');
        } else {
          userDropdown.classList.remove('show');
          setTimeout(() => userDropdown.classList.add('hidden'), 200);
          userMenuButton.setAttribute('aria-expanded', 'false');
        }
      });
      
      // Close dropdown when clicking outside
      document.addEventListener('click', function(e) {
        if (!userMenuButton.contains(e.target) && !userDropdown.contains(e.target)) {
          userDropdown.classList.remove('show');
          setTimeout(() => userDropdown.classList.add('hidden'), 200);
          userMenuButton.setAttribute('aria-expanded', 'false');
        }
      });
    }
  });
</script>